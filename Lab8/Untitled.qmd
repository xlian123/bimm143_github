---
title: "lab8"
author: "Xiaoyu Lian (A17025943)"
format: gfm
editor: visual
---

## 

It is important to consider scalling your data before analysis such as PCA.

For example:

```{r}
head(mtcars)
```

```{r}
colMeans(mtcars)
```

```{r}
apply(mtcars, 2, sd)
```

```{r}
x <- scale(mtcars)
head(x)
```

```{r}
round(colMeans(x),2)
```

```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
```

```{r}
head(wisc.df)
```

```{r}
wisc.data <-wisc.df[,-1]
diagnosis <- factor(wisc.df$diagnosis)
```

##1. Exploratory data analysis

> Q1. How many observations are in this dataset?

```{r}
nrow(wisc.data)
```

> Q2. How many of the observations have a malignant diagnosis?

```{r}
#sum(diagnosis == "M")
table(diagnosis)
```

> Q3. How many variables/features in the data are suffixed with \_mean?

```{r}
length(grep("_mean", colnames(wisc.data) , value = T))
```

##2. Principal Component Analysis

```{r}
colMeans(wisc.data)
apply(wisc.data,2,sd)
```

```{r}
wisc.pr <- prcomp(wisc.data, scale = T)
summary(wisc.pr)
```

> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

44.27%

Main PCA score plot, PC1 VS PC2 plot each point represents a sample and its measured cell characteristics in the dataset. The general idea is that countries that consume similar food should cluster

```{r}
head(wisc.pr$x)
plot(wisc.pr$x[,1],wisc.pr$x[,2], col = as.factor(diagnosis))
```

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

3

> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

7

##Interpreting PCA results \>Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

This graph is a mess that all info is cluster in the middle of the graph and hard to read or understand.

```{r}
biplot(wisc.pr)
```

```{r}
plot(wisc.pr$x[,1],wisc.pr$x[,2], col = as.factor(diagnosis),xlab = "PC1", ylab = "PC2")
```

> Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

the difference between magliant and benign is less obvious than PC1 VS PC2

```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[,1],wisc.pr$x[,3], col = as.factor(diagnosis), 
     xlab = "PC1", ylab = "PC3")
```

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

##Variance explained

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
## ggplot based graph
#install.packages("factoextra")
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```

##Communicating PCA results

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr\$rotation\[,1\]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation["concave.points_mean",1]
```

> Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

5

##3. Hierarchical clustering

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled)
```

```{r}
wisc.hclust <- hclust(data.dist)
```

##Results of hierarchical clustering

> Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=20, col="red", lty=2)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
table(wisc.hclust.clusters, diagnosis)
```

> Q13. Which method gives your favorite results for the same `data.dist` dataset? Explain your reasoning.

I believe the "ward.D2" gives me the favorite result. The single and average are both vague when showing the 4 clusters. Complete is not that bad but the first cluster is vague and condensed on the graph. Only ward.D2 provides a clear sense of the cluster.

```{r}
wisc.hclustc <- hclust(data.dist, method = "complete")
plot(wisc.hclustc)
abline(h=20, col="red", lty=2)
```

```{r}
wisc.hclustsi <- hclust(data.dist, method = "single")
plot(wisc.hclustsi)
abline(h=20, col="red", lty=2)
```

```{r}
wisc.hclusta <- hclust(data.dist, method = "average")
plot(wisc.hclusta)
abline(h=12, col="red", lty=2)
```

```{r}
wisc.hclustw <- hclust(data.dist, method = "ward.D2")
plot(wisc.hclustw)
abline(h=20, col="red", lty=2)
```

##Selecting number of clusters

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
table(wisc.hclust.clusters, diagnosis)
```

##5. Combining Methods

```{r}
d <- dist(wisc.pr$x[,1:7])
wisc.pr.hclust <-hclust(d, method = 'ward.D2')
```

```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
```

```{r}
## Use the distance along the first 7 PCs for clustering i.e. wisc.pr$x[, 1:7]
wisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method="ward.D2")
```

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
```

```{r}
table(wisc.pr.hclust.clusters, diagnosis)
```

```{r}
wisc.km <- kmeans(data.scaled, centers= 2, nstart= 20)
table(wisc.km$cluster, diagnosis)
table( wisc.hclust.clusters,wisc.km$cluster)
```

> Q15. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
table(wisc.pr.hclust.clusters,diagnosis)
```

> Q16. How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km\$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

The k-means shows a clear separation between malignant and benign diagnosis, which groups the malignant cases and benign cases separately. However, in hierarchical method, the separation between malignant and benign diagnosis is not that clear.

```{r}
table(wisc.km$cluster, diagnosis)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q18. Which of these new patients should we prioritize for follow up based on your results?
